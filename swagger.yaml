openapi: 3.0.0
info:
  title: A Simple Hiring API
  version: 1.0.0

paths:
  /hiring/{name}:
    get:
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
            example: Pacharasiri
      responses:
        '200':
          description: Success
        '500':
          $ref: '#/components/responses/500ApiError'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hiring'
    put:
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
            example: Pacharasiri
      responses:
        '200':
          description: Success
        '404':
          $ref: '#/components/responses/404NotFound'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hiring'
    delete:
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
            example: Pacharasiri
      responses:
        '204':
          description: Delete Success
        '500':
          $ref: '#/components/responses/500ApiError'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hiring'
                
  /hiring:
    get:
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hiring'
        '500':
          $ref: '#/components/responses/500ApiError'
    post:
      description: Add a new employee 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hiring'
          application/xml:
              schema:
                $ref: '#/components/schemas/Hiring'
      responses:
        '201':
          description: The employee has been created.
        '500':
          $ref: '#/components/responses/500ApiError'
          
components:
  schemas:
    Hiring:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Pacharasiri
        experience:
          type: integer
          example: 4
        test_score:
          type: integer
          example: 5
        interview_score:
          type: integer
          example: 10
        salary:
          type: integer
          example: 20000 
          
      required:
        - name
        - experience
        - test_score
        - interview_score
        - salary
  responses:
    200OK:
      description: This is success.
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: string
                example: 200
              message:
                type: string
                example: This is success.
    201Created:
      description: This is created.
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: string
                example: 201
              message:
                type: string
                example: This is created.
    204NoContent:
      description: Delete Success
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: string
                example: 204
              message:
                type: string
                example: This is no content.
    404NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: string
                example: 404
              message:
                type: string
                example: NotFound
    500ApiError:
      description: This is unexpected.
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: string
                example: 500
              message:
                type: string
                example: This is an error
          







                  
  